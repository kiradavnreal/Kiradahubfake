-- Script: Kirada Demo (C·∫≠p nh·∫≠t: Fix ƒêi Tr√™n N∆∞·ªõc cho Blox Fruits, T∆∞∆°ng th√≠ch m·ªçi game, Ti·∫øng Vi·ªát)
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Terrain = workspace:WaitForChild("Terrain")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

-- T·∫°o GUI Menu (Scrollable ngang)
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "KiradaDemo"
ScreenGui.Parent = player.PlayerGui
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- N√∫t Toggle Menu (Mobile/PC)
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 60, 0, 60)
toggleButton.Position = UDim2.new(0, 10, 0, 10)
toggleButton.BackgroundColor3 = Color3.fromRGB(34, 139, 34) -- Xanh l√°
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.Text = "üå≤"
toggleButton.TextScaled = true
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.Parent = ScreenGui
toggleButton.Name = "ToggleButton"

local toggleCorner = Instance.new("UICorner")
toggleCorner.CornerRadius = UDim.new(0, 15)
toggleCorner.Parent = toggleButton

-- Frame ch√≠nh
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 720, 0, 250)
mainFrame.Position = UDim2.new(0.5, -360, 0.5, -125)
mainFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
mainFrame.BackgroundTransparency = 0.3
mainFrame.BorderSizePixel = 0
mainFrame.Visible = false
mainFrame.Parent = ScreenGui

local mainCorner = Instance.new("UICorner")
mainCorner.CornerRadius = UDim.new(0, 12)
mainCorner.Parent = mainFrame

local gradient = Instance.new("UIGradient")
gradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 100, 0)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 50, 0))
})
gradient.Rotation = 45
gradient.Parent = mainFrame

local scrollingFrame = Instance.new("ScrollingFrame")
scrollingFrame.Size = UDim2.new(1, 0, 1, 0)
scrollingFrame.Position = UDim2.new(0, 0, 0, 0)
scrollingFrame.BackgroundTransparency = 1
scrollingFrame.BorderSizePixel = 0
scrollingFrame.ScrollBarThickness = 8
scrollingFrame.ScrollBarImageColor3 = Color3.fromRGB(34, 139, 34)
scrollingFrame.CanvasSize = UDim2.new(2.5, 0, 0, 0)
scrollingFrame.ScrollingDirection = Enum.ScrollingDirection.X
scrollingFrame.Parent = mainFrame

-- H√†m t·∫°o TextBox
local function createTextBox(name, position, placeholder)
    local textBox = Instance.new("TextBox")
    textBox.Size = UDim2.new(0, 120, 0, 40)
    textBox.Position = position
    textBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    textBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    textBox.PlaceholderText = placeholder
    textBox.Text = ""
    textBox.TextScaled = true
    textBox.Font = Enum.Font.SourceSans
    textBox.Parent = scrollingFrame
    textBox.Name = name
    
    local tbCorner = Instance.new("UICorner")
    tbCorner.CornerRadius = UDim.new(0, 8)
    tbCorner.Parent = textBox
    
    return textBox
end

-- H√†m t·∫°o Button v·ªõi hover
local function createButton(name, position, text)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 120, 0, 40)
    button.Position = position
    button.BackgroundColor3 = Color3.fromRGB(34, 139, 34)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Text = text
    button.TextScaled = true
    button.Font = Enum.Font.SourceSansBold
    button.Parent = scrollingFrame
    button.Name = name
    
    local btnCorner = Instance.new("UICorner")
    btnCorner.CornerRadius = UDim.new(0, 8)
    btnCorner.Parent = button
    
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(50, 160, 50)}):Play()
    end)
    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(34, 139, 34)}):Play()
    end)
    
    return button
end

-- T·∫°o giao di·ªán ngang
local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(0, 700, 0, 40)
titleLabel.Position = UDim2.new(0, 10, 0, 10)
titleLabel.BackgroundTransparency = 1
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.Text = "üå≤ Kirada Demo Menu üå≤"
titleLabel.TextScaled = true
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.Parent = scrollingFrame

local speedButton = createButton("SpeedButton", UDim2.new(0, 10, 0, 60), "ƒê·∫∑t T·ªëc ƒê·ªô")
local speedInput = createTextBox("SpeedInput", UDim2.new(0, 140, 0, 60), "T·ªëc ƒë·ªô (VD: 100)")

local jumpButton = createButton("JumpButton", UDim2.new(0, 270, 0, 60), "ƒê·∫∑t Nh·∫£y")
local jumpInput = createTextBox("JumpInput", UDim2.new(0, 400, 0, 60), "Nh·∫£y (VD: 50)")

local teleportButton = createButton("TeleportButton", UDim2.new(0, 530, 0, 60), "D·ªãch Chuy·ªÉn")
local teleportInput = createTextBox("TeleportInput", UDim2.new(0, 660, 0, 60), "T√™n ng∆∞·ªùi ch∆°i")

local noclipToggle = createButton("NoclipToggle", UDim2.new(0, 10, 0, 110), "Xuy√™n T∆∞·ªùng: T·∫ÆT")
local godModeToggle = createButton("GodModeToggle", UDim2.new(0, 140, 0, 110), "B·∫•t T·ª≠: T·∫ÆT")
local espToggle = createButton("EspToggle", UDim2.new(0, 270, 0, 110), "ESP: T·∫ÆT")
local hitboxToggle = createButton("HitboxToggle", UDim2.new(0, 400, 0, 110), "Hitbox: T·∫ÆT")
local autoHitToggle = createButton("AutoHitToggle", UDim2.new(0, 530, 0, 110), "Auto Hit: T·∫ÆT")
local waterWalkToggle = createButton("WaterWalkToggle", UDim2.new(0, 660, 0, 110), "ƒêi Tr√™n N∆∞·ªõc: T·∫ÆT")

-- Bi·∫øn tr·∫°ng th√°i
local isNoClip = false
local isGodMode = false
local isESP = false
local isHitbox = false
local isAutoHit = false
local isWaterWalk = false
local noclipConnection = nil
local espConnections = {}
local hitboxParts = {}
local autoHitConnection = nil
local waterWalkConnection = nil

-- H√†m th√¥ng b√°o
local function notify(message)
    game.StarterGui:SetCore("SendNotification", {
        Title = "Kirada Demo",
        Text = message,
        Duration = 3
    })
end

-- Toggle Menu
toggleButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = not mainFrame.Visible
    if mainFrame.Visible then
        TweenService:Create(mainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back), {Position = UDim2.new(0.5, -360, 0.5, -125)}):Play()
    else
        TweenService:Create(mainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back), {Position = UDim2.new(0.5, -360, 1, 0)}):Play()
    end
end)

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.M then
        toggleButton.MouseButton1Click:Fire()
    end
end)

-- X·ª≠ l√Ω t·ªëc ƒë·ªô
speedButton.MouseButton1Click:Connect(function()
    local speed = tonumber(speedInput.Text)
    if speed then
        humanoid.WalkSpeed = math.clamp(speed, 0, 1000)
        notify("ƒê√£ ƒë·∫∑t t·ªëc ƒë·ªô: " .. speed)
    else
        notify("Vui l√≤ng nh·∫≠p s·ªë h·ª£p l·ªá cho t·ªëc ƒë·ªô!")
    end
end)

-- X·ª≠ l√Ω nh·∫£y
jumpButton.MouseButton1Click:Connect(function()
    local jumpPower = tonumber(jumpInput.Text)
    if jumpPower then
        humanoid.JumpPower = math.clamp(jumpPower, 0, 500)
        humanoid.UseJumpPower = true
        notify("ƒê√£ ƒë·∫∑t s·ª©c nh·∫£y: " .. jumpPower)
    else
        notify("Vui l√≤ng nh·∫≠p s·ªë h·ª£p l·ªá cho s·ª©c nh·∫£y!")
    end
end)

-- X·ª≠ l√Ω d·ªãch chuy·ªÉn
teleportButton.MouseButton1Click:Connect(function()
    local targetName = teleportInput.Text
    local targetPlayer = nil
    for _, p in pairs(Players:GetPlayers()) do
        if p.Name:lower():find(targetName:lower()) then
            targetPlayer = p
            break
        end
    end
    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        rootPart.CFrame = targetPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0, 0, 2)
        notify("ƒê√£ d·ªãch chuy·ªÉn ƒë·∫øn: " .. targetPlayer.Name)
    else
        notify("Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi ch∆°i ho·∫∑c t√™n kh√¥ng h·ª£p l·ªá!")
    end
end)

-- X·ª≠ l√Ω xuy√™n t∆∞·ªùng
noclipToggle.MouseButton1Click:Connect(function()
    isNoClip = not isNoClip
    noclipToggle.Text = "Xuy√™n T∆∞·ªùng: " .. (isNoClip and "B·∫¨T" or "T·∫ÆT")
    
    if isNoClip then
        noclipConnection = RunService.Stepped:Connect(function()
            if character then
                for _, part in pairs(character:GetDescendants()) do
                    if part:IsA("BasePart") and part ~= rootPart then
                        part.CanCollide = false
                    end
                end
            end
        end)
        notify("ƒê√£ b·∫≠t Xuy√™n T∆∞·ªùng")
    else
        if noclipConnection then
            noclipConnection:Disconnect()
            noclipConnection = nil
        end
        if character then
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = true
                end
            end
        end
        notify("ƒê√£ t·∫Øt Xuy√™n T∆∞·ªùng")
    end
end)

-- X·ª≠ l√Ω b·∫•t t·ª≠
godModeToggle.MouseButton1Click:Connect(function()
    isGodMode = not isGodMode
    godModeToggle.Text = "B·∫•t T·ª≠: " .. (isGodMode and "B·∫¨T" or "T·∫ÆT")
    
    if isGodMode then
        humanoid.MaxHealth = math.huge
        humanoid.Health = math.huge
        notify("ƒê√£ b·∫≠t B·∫•t T·ª≠")
    else
        humanoid.MaxHealth = 100
        humanoid.Health = 100
        notify("ƒê√£ t·∫Øt B·∫•t T·ª≠")
    end
end)

-- X·ª≠ l√Ω ESP Player/NPC (Box, Kho·∫£ng c√°ch m√†u c·∫ßu v·ªìng)
local function createEsp(target)
    local box = Drawing.new("Square")
    box.Visible = false
    box.Color = Color3.fromRGB(255, 255, 255)
    box.Thickness = 2
    box.Filled = false

    local distanceText = Drawing.new("Text")
    distanceText.Visible = false
    distanceText.Size = 16
    distanceText.Color = Color3.fromRGB(255, 255, 255)
    distanceText.Text = ""

    local connection = RunService.RenderStepped:Connect(function()
        if isESP and target and target.Parent and target:FindFirstChild("HumanoidRootPart") then
            local root = target.HumanoidRootPart
            local camera = workspace.CurrentCamera
            local screenPos, onScreen = camera:WorldToViewportPoint(root.Position)
            
            if onScreen then
                local size = (camera:WorldToViewportPoint(root.Position - Vector3.new(2, 3, 0)).Y - camera:WorldToViewportPoint(root.Position + Vector3.new(2, 3, 0)).Y) / 2
                box.Size = Vector2.new(size * 1.5, size * 2)
                box.Position = Vector2.new(screenPos.X - box.Size.X / 2, screenPos.Y - box.Size.Y / 2)
                box.Visible = true
                
                local distance = math.floor((rootPart.Position - root.Position).Magnitude)
                distanceText.Text = tostring(distance) .. "m"
                distanceText.Position = Vector2.new(screenPos.X, screenPos.Y - box.Size.Y / 2 - 20)
                distanceText.Visible = true
                
                -- M√†u c·∫ßu v·ªìng
                local hue = (tick() % 5) / 5
                distanceText.Color = Color3.fromHSV(hue, 1, 1)
            else
                box.Visible = false
                distanceText.Visible = false
            end
        else
            box.Visible = false
            distanceText.Visible = false
        end
    end)
    
    return {box = box, text = distanceText, connection = connection}
end

espToggle.MouseButton1Click:Connect(function()
    isESP = not isESP
    espToggle.Text = "ESP: " .. (isESP and "B·∫¨T" or "T·∫ÆT")
    
    if isESP then
        for _, p in pairs(Players:GetPlayers()) do
            if p ~= player and p.Character then
                espConnections[p] = createEsp(p.Character)
            end
        end
        for _, npc in pairs(workspace:GetDescendants()) do
            if npc:IsA("Model") and npc:FindFirstChild("Humanoid") and npc ~= player.Character then
                espConnections[npc] = createEsp(npc)
            end
        end
        notify("ƒê√£ b·∫≠t ESP Player/NPC")
    else
        for _, esp in pairs(espConnections) do
            esp.box:Remove()
            esp.text:Remove()
            esp.connection:Disconnect()
        end
        espConnections = {}
        notify("ƒê√£ t·∫Øt ESP Player/NPC")
    end
end)

-- X·ª≠ l√Ω Hitbox m·ªü r·ªông
local function expandHitbox(target)
    if target and target:FindFirstChild("HumanoidRootPart") then
        local root = target.HumanoidRootPart
        local hitboxPart = Instance.new("Part")
        hitboxPart.Size = root.Size * 3
        hitboxPart.Transparency = 0.5
        hitboxPart.CanCollide = false
        hitboxPart.Anchored = false
        hitboxPart.Parent = target
        local weld = Instance.new("WeldConstraint")
        weld.Part0 = root
        weld.Part1 = hitboxPart
        weld.Parent = hitboxPart
        return hitboxPart
    end
end

hitboxToggle.MouseButton1Click:Connect(function()
    isHitbox = not isHitbox
    hitboxToggle.Text = "Hitbox: " .. (isHitbox and "B·∫¨T" or "T·∫ÆT")
    
    if isHitbox then
        for _, p in pairs(Players:GetPlayers()) do
            if p ~= player and p.Character then
                hitboxParts[p] = expandHitbox(p.Character)
            end
        end
        for _, npc in pairs(workspace:GetDescendants()) do
            if npc:IsA("Model") and npc:FindFirstChild("Humanoid") and npc ~= player.Character then
                hitboxParts[npc] = expandHitbox(npc)
            end
        end
        notify("ƒê√£ b·∫≠t Hitbox m·ªü r·ªông cho Player/NPC")
    else
        for _, part in pairs(hitboxParts) do
            if part then part:Destroy() end
        end
        hitboxParts = {}
        notify("ƒê√£ t·∫Øt Hitbox m·ªü r·ªông")
    end
end)

-- X·ª≠ l√Ω Auto Hit
local function findNearestTarget()
    local nearest = nil
    local nearestDist = math.huge
    for _, p in pairs(Players:GetPlayers()) do
        if p ~= player and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            local dist = (rootPart.Position - p.Character.HumanoidRootPart.Position).Magnitude
            if dist < nearestDist then
                nearest = p.Character
                nearestDist = dist
            end
        end
    end
    for _, npc in pairs(workspace:GetDescendants()) do
        if npc:IsA("Model") and npc:FindFirstChild("Humanoid") and npc ~= player.Character then
            local dist = (rootPart.Position - npc.HumanoidRootPart.Position).Magnitude
            if dist < nearestDist then
                nearest = npc
                nearestDist = dist
            end
        end
    end
    return nearest
end

autoHitToggle.MouseButton1Click:Connect(function()
    isAutoHit = not isAutoHit
    autoHitToggle.Text = "Auto Hit: " .. (isAutoHit and "B·∫¨T" or "T·∫ÆT")
    
    if isAutoHit then
        autoHitConnection = RunService.Heartbeat:Connect(function()
            if character then
                local nearest = findNearestTarget()
                if nearest then
                    local attackRemote = ReplicatedStorage:FindFirstChild("AttackRemote")
                    if attackRemote then
                        attackRemote:FireServer(nearest.HumanoidRootPart.Position)
                    end
                    local tool = character:FindFirstChildWhichIsA("Tool")
                    if tool and tool:FindFirstChild("Handle") then
                        tool.Handle.CFrame = nearest.HumanoidRootPart.CFrame
                    end
                end
            end
        end)
        notify("ƒê√£ b·∫≠t Auto Hit cho Player/NPC")
    else
        if autoHitConnection then
            autoHitConnection:Disconnect()
            autoHitConnection = nil
        end
        notify("ƒê√£ t·∫Øt Auto Hit")
    end
end)

-- X·ª≠ l√Ω ƒêi Tr√™n N∆∞·ªõc (Fix cho Blox Fruits)
waterWalkToggle.MouseButton1Click:Connect(function()
    isWaterWalk = not isWaterWalk
    waterWalkToggle.Text = "ƒêi Tr√™n N∆∞·ªõc: " .. (isWaterWalk and "B·∫¨T" or "T·∫ÆT")
    
    if isWaterWalk then
        waterWalkConnection = RunService.Stepped:Connect(function()
            if character and rootPart and humanoid then
                -- RaycastParams ƒë·ªÉ ph√°t hi·ªán n∆∞·ªõc trong Terrain
                local rayParams = RaycastParams.new()
                rayParams.FilterDescendantsInstances = {character}
                rayParams.FilterType = Enum.RaycastFilterType.Blacklist
                local ray = workspace:Raycast(rootPart.Position, Vector3.new(0, -10, 0), rayParams)
                
                -- Ki·ªÉm tra Terrain.Water ho·∫∑c part t√™n ch·ª©a "water"/"sea"
                local isOnWater = false
                local waterY = nil
                if Terrain:WorldToCell(rootPart.Position).Y <= Terrain.WaterLevel then
                    isOnWater = true
                    waterY = Terrain.WaterLevel
                elseif ray and ray.Instance and (ray.Instance.Name:lower():find("water") or ray.Instance.Name:lower():find("sea")) then
                    isOnWater = true
                    waterY = ray.Position.Y
                end
                
                if isOnWater and waterY then
                    -- ƒê·∫∑t player tr√™n b·ªÅ m·∫∑t n∆∞·ªõc
                    rootPart.Position = Vector3.new(rootPart.Position.X, waterY + 3, rootPart.Position.Z)
                    -- V√¥ hi·ªáu h√≥a tr·∫°ng th√°i b∆°i trong Blox Fruits
                    humanoid:ChangeState(Enum.HumanoidStateType.Running)
                    humanoid.Sit = false
                end
            end
        end)
        notify("ƒê√£ b·∫≠t ƒêi Tr√™n N∆∞·ªõc")
    else
        if waterWalkConnection then
            waterWalkConnection:Disconnect()
            waterWalkConnection = nil
        end
        notify("ƒê√£ t·∫Øt ƒêi Tr√™n N∆∞·ªõc")
    end
end)

-- X·ª≠ l√Ω nh√¢n v·∫≠t reset
player.CharacterAdded:Connect(function(newCharacter)
    character = newCharacter
    humanoid = character:WaitForChild("Humanoid")
    rootPart = character:WaitForChild("HumanoidRootPart")
    
    if isNoClip then
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") and part ~= rootPart then
                part.CanCollide = false
            end
        end
    end
    if isGodMode then
        humanoid.MaxHealth = math.huge
        humanoid.Health = math.huge
    end
end)

-- Th√¥ng b√°o kh·ªüi ƒë·ªông
notify("Kirada Demo ƒë√£ t·∫£i! Ch·∫°m n√∫t üå≤ ƒë·ªÉ m·ªü menu.")
