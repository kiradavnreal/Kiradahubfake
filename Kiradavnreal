local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Terrain = workspace:WaitForChild("Terrain")
local HttpService = game:GetService("HttpService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

-- T·∫°o GUI Menu
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "KiradaDemo"
ScreenGui.Parent = player.PlayerGui
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- N√∫t Toggle Menu (Mobile/PC)
local toggleButton = Instance.new("ImageButton")
toggleButton.Size = UDim2.new(0, 60, 0, 60)
toggleButton.Position = UDim2.new(0, 10, 0, 10)
toggleButton.BackgroundColor3 = Color3.fromRGB(139, 0, 0) -- ƒê·ªè m√°u
toggleButton.Image = "rbxassetid://89326205091486" -- ID h√¨nh ·∫£nh ƒë√£ x√°c minh
toggleButton.Parent = ScreenGui
toggleButton.Name = "ToggleButton"

local toggleCorner = Instance.new("UICorner")
toggleCorner.CornerRadius = UDim.new(0, 15)
toggleCorner.Parent = toggleButton

-- Frame ch√≠nh
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 400, 0, 300)
mainFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
mainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20) -- ƒêen ƒë·∫≠m u √°m
mainFrame.BackgroundTransparency = 0.5
mainFrame.BorderSizePixel = 0
mainFrame.Visible = false
mainFrame.Parent = ScreenGui

local mainCorner = Instance.new("UICorner")
mainCorner.CornerRadius = UDim.new(0, 12)
mainCorner.Parent = mainFrame

local gradient = Instance.new("UIGradient")
gradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(30, 30, 30)), -- X√°m ƒë·∫≠m
    ColorSequenceKeypoint.new(1, Color3.fromRGB(10, 10, 10)) -- ƒêen
})
gradient.Rotation = 45
gradient.Parent = mainFrame

local scrollingFrame = Instance.new("ScrollingFrame")
scrollingFrame.Size = UDim2.new(1, 0, 1, 0)
scrollingFrame.Position = UDim2.new(0, 0, 0, 0)
scrollingFrame.BackgroundTransparency = 1
scrollingFrame.BorderSizePixel = 0
scrollingFrame.ScrollBarThickness = 8
scrollingFrame.ScrollBarImageColor3 = Color3.fromRGB(139, 0, 0) -- ƒê·ªè m√°u
scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 400)
scrollingFrame.ScrollingDirection = Enum.ScrollingDirection.Y
scrollingFrame.Parent = mainFrame

-- Menu nh·ªè cho c√¢u c√°
local fishingFrame = Instance.new("Frame")
fishingFrame.Size = UDim2.new(0, 200, 0, 120)
fishingFrame.Position = UDim2.new(0.5, -100, 0.5, -60)
fishingFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20) -- ƒêen ƒë·∫≠m u √°m
fishingFrame.BackgroundTransparency = 0.5
fishingFrame.BorderSizePixel = 0
fishingFrame.Visible = false
fishingFrame.Parent = ScreenGui

local fishingCorner = Instance.new("UICorner")
fishingCorner.CornerRadius = UDim.new(0, 12)
fishingCorner.Parent = fishingFrame

local fishingGradient = Instance.new("UIGradient")
fishingGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(30, 30, 30)), -- X√°m ƒë·∫≠m
    ColorSequenceKeypoint.new(1, Color3.fromRGB(10, 10, 10)) -- ƒêen
})
fishingGradient.Rotation = 45
fishingGradient.Parent = fishingFrame

-- H√†m t·∫°o TextBox
local function createTextBox(name, position, placeholder)
    local textBox = Instance.new("TextBox")
    textBox.Size = UDim2.new(0, 120, 0, 40)
    textBox.Position = position
    textBox.BackgroundColor3 = Color3.fromRGB(30, 30, 30) -- X√°m ƒë·∫≠m
    textBox.TextColor3 = Color3.fromRGB(139, 0, 0) -- ƒê·ªè m√°u
    textBox.PlaceholderText = placeholder
    textBox.Text = ""
    textBox.TextScaled = true
    textBox.Font = Enum.Font.SourceSans
    textBox.Parent = scrollingFrame
    textBox.Name = name
    
    local tbCorner = Instance.new("UICorner")
    tbCorner.CornerRadius = UDim.new(0, 8)
    tbCorner.Parent = textBox
    
    return textBox
end

-- H√†m t·∫°o Button v·ªõi hover
local function createButton(name, position, text, parent)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 120, 0, 40)
    button.Position = position
    button.BackgroundColor3 = Color3.fromRGB(139, 0, 0) -- ƒê·ªè m√°u
    button.TextColor3 = Color3.fromRGB(255, 255, 255) -- Tr·∫Øng cho t∆∞∆°ng ph·∫£n
    button.Text = text
    button.TextScaled = true
    button.Font = Enum.Font.SourceSansBold
    button.Parent = parent
    button.Name = name
    
    local btnCorner = Instance.new("UICorner")
    btnCorner.CornerRadius = UDim.new(0, 8)
    btnCorner.Parent = button
    
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(178, 34, 34)}):Play() -- ƒê·ªè s·∫´m khi hover
    end)
    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(139, 0, 0)}):Play() -- ƒê·ªè m√°u khi r·ªùi
    end)
    
    return button
end

-- T·∫°o giao di·ªán: 3 ch·ª©c nƒÉng m·ªói h√†ng, xu·ªëng d√≤ng
local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(0, 380, 0, 40)
titleLabel.Position = UDim2.new(0, 10, 0, 10)
titleLabel.BackgroundTransparency = 1
titleLabel.TextColor3 = Color3.fromRGB(139, 0, 0) -- ƒê·ªè m√°u
titleLabel.Text = "üå≤ Kirada Demo Menu üå≤"
titleLabel.TextScaled = true
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.Parent = scrollingFrame

-- H√†ng 1
local speedButton = createButton("SpeedButton", UDim2.new(0, 10, 0, 60), "ƒê·∫∑t T·ªëc ƒê·ªô", scrollingFrame)
local speedInput = createTextBox("SpeedInput", UDim2.new(0, 140, 0, 60), "T·ªëc ƒë·ªô (VD: 100)")
local jumpButton = createButton("JumpButton", UDim2.new(0, 270, 0, 60), "ƒê·∫∑t Nh·∫£y", scrollingFrame)

-- H√†ng 2
local jumpInput = createTextBox("JumpInput", UDim2.new(0, 10, 0, 110), "Nh·∫£y (VD: 50)")
local teleportButton = createButton("TeleportButton", UDim2.new(0, 140, 0, 110), "D·ªãch Chuy·ªÉn", scrollingFrame)
local teleportInput = createTextBox("TeleportInput", UDim2.new(0, 270, 0, 110), "T√™n ng∆∞·ªùi ch∆°i")

-- H√†ng 3
local noclipToggle = createButton("NoclipToggle", UDim2.new(0, 10, 0, 160), "Xuy√™n T∆∞·ªùng: T·∫ÆT", scrollingFrame)
local antiAfkToggle = createButton("AntiAfkToggle", UDim2.new(0, 140, 0, 160), "Anti-AFK: T·∫ÆT", scrollingFrame) -- N√∫t Anti-AFK m·ªõi
local fishingToggle = createButton("FishingToggle", UDim2.new(0, 270, 0, 160), "C√¢u C√°: T·∫ÆT", scrollingFrame)

-- H√†ng 4
local waterWalkToggle = createButton("WaterWalkToggle", UDim2.new(0, 10, 0, 210), "ƒêi Tr√™n N∆∞·ªõc: T·∫ÆT", scrollingFrame)
local flyToggle = createButton("FlyToggle", UDim2.new(0, 140, 0, 210), "Bay: T·∫ÆT", scrollingFrame)

-- N√∫t trong menu c√¢u c√°
local bypassFishButton = createButton("BypassFishButton", UDim2.new(0, 10, 0, 20), "Bypass C√°", fishingFrame)
local autoFishButton = createButton("AutoFishButton", UDim2.new(0, 10, 0, 70), "C√¢u C√° BTh", fishingFrame)

-- Bi·∫øn tr·∫°ng th√°i
local isNoClip = false
local isFishing = false
local isBypassFishing = false
local isAutoFishing = false
local isFlying = false
local isAntiAfk = false -- Bi·∫øn tr·∫°ng th√°i cho Anti-AFK
local customWalkSpeed = 16 -- Gi√° tr·ªã m·∫∑c ƒë·ªãnh
local customJumpPower = 50 -- Gi√° tr·ªã m·∫∑c ƒë·ªãnh
local noclipConnection = nil
local fishingConnection = nil
local waterWalkConnection = nil
local waterPlatform = nil
local antiAfkConnection = nil -- Connection cho Anti-AFK

-- H√†m th√¥ng b√°o
local function notify(message)
    game.StarterGui:SetCore("SendNotification", {
        Title = "Kirada Demo",
        Text = message,
        Duration = 3
    })
end

-- Toggle Menu
toggleButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = not mainFrame.Visible
    if mainFrame.Visible then
        TweenService:Create(mainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back), {Position = UDim2.new(0.5, -200, 0.5, -150)}):Play()
    else
        TweenService:Create(mainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back), {Position = UDim2.new(0.5, -200, 1, 0)}):Play()
    end
end)

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.M then
        toggleButton.MouseButton1Click:Fire()
    end
end)

-- X·ª≠ l√Ω t·ªëc ƒë·ªô
speedButton.MouseButton1Click:Connect(function()
    local speed = tonumber(speedInput.Text)
    if speed then
        customWalkSpeed = math.clamp(speed, 0, 1000)
        notify("ƒê√£ ƒë·∫∑t t·ªëc ƒë·ªô: " .. customWalkSpeed)
    else
        notify("Vui l√≤ng nh·∫≠p s·ªë h·ª£p l·ªá cho t·ªëc ƒë·ªô!")
    end
end)

-- X·ª≠ l√Ω nh·∫£y
jumpButton.MouseButton1Click:Connect(function()
    local jumpPower = tonumber(jumpInput.Text)
    if jumpPower then
        customJumpPower = math.clamp(jumpPower, 0, 500)
        humanoid.UseJumpPower = true
        notify("ƒê√£ ƒë·∫∑t s·ª©c nh·∫£y: " .. customJumpPower)
    else
        notify("Vui l√≤ng nh·∫≠p s·ªë h·ª£p l·ªá cho s·ª©c nh·∫£y!")
    end
end)

-- Loop ƒë·ªÉ set WalkSpeed v√† JumpPower li√™n t·ª•c
local speedJumpConnection = RunService.Heartbeat:Connect(function()
    if character and humanoid then
        humanoid.WalkSpeed = customWalkSpeed
        humanoid.JumpPower = customJumpPower
    end
end)

-- X·ª≠ l√Ω d·ªãch chuy·ªÉn
teleportButton.MouseButton1Click:Connect(function()
    local targetName = teleportInput.Text
    local targetPlayer = nil
    for _, p in pairs(Players:GetPlayers()) do
        if p.Name:lower():find(targetName:lower()) then
            targetPlayer = p
            break
        end
    end
    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        rootPart.CFrame = targetPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0, 0, 2)
        notify("ƒê√£ d·ªãch chuy·ªÉn ƒë·∫øn: " .. targetPlayer.Name)
    else
        notify("Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi ch∆°i ho·∫∑c t√™n kh√¥ng h·ª£p l·ªá!")
    end
end)

-- X·ª≠ l√Ω xuy√™n t∆∞·ªùng
noclipToggle.MouseButton1Click:Connect(function()
    isNoClip = not isNoClip
    noclipToggle.Text = "Xuy√™n T∆∞·ªùng: " .. (isNoClip and "B·∫¨T" or "T·∫ÆT")
    
    if isNoClip then
        noclipConnection = RunService.Stepped:Connect(function()
            if character then
                for _, part in pairs(character:GetDescendants()) do
                    if part:IsA("BasePart") and part ~= rootPart then
                        part.CanCollide = false
                    end
                end
            end
        end)
        notify("ƒê√£ b·∫≠t Xuy√™n T∆∞·ªùng")
    else
        if noclipConnection then
            noclipConnection:Disconnect()
            noclipConnection = nil
        end
        if character then
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = true
                end
            end
        end
        notify("ƒê√£ t·∫Øt Xuy√™n T∆∞·ªùng")
    end
end)

-- X·ª≠ l√Ω Anti-AFK
antiAfkToggle.MouseButton1Click:Connect(function()
    isAntiAfk = not isAntiAfk
    antiAfkToggle.Text = "Anti-AFK: " .. (isAntiAfk and "B·∫¨T" or "T·∫ÆT")
    
    if isAntiAfk then
        antiAfkConnection = game:GetService("RunService").Heartbeat:Connect(function()
            -- M·ªói 5 ph√∫t (300 gi√¢y), m√¥ ph·ªèng nh·∫•n chu·ªôt tr√°i
            if tick() % 300 < 0.1 then
                game:GetService("VirtualUser"):ClickButton1(Vector2.new(0, 0))
                notify("Anti-AFK: ƒê√£ m√¥ ph·ªèng nh·∫•n chu·ªôt ƒë·ªÉ tr√°nh kick!")
            end
        end)
        notify("ƒê√£ b·∫≠t Anti-AFK (nh·∫•n chu·ªôt m·ªói 5 ph√∫t)")
    else
        if antiAfkConnection then
            antiAfkConnection:Disconnect()
            antiAfkConnection = nil
        end
        notify("ƒê√£ t·∫Øt Anti-AFK")
    end
end)

-- X·ª≠ l√Ω ƒêi Tr√™n N∆∞·ªõc
local isWaterWalk = false
waterWalkToggle.MouseButton1Click:Connect(function()
    isWaterWalk = not isWaterWalk
    waterWalkToggle.Text = "ƒêi Tr√™n N∆∞·ªõc: " .. (isWaterWalk and "B·∫¨T" or "T·∫ÆT")
    
    if isWaterWalk then
        waterPlatform = Instance.new("Part")
        waterPlatform.Size = Vector3.new(10, 0.5, 10)
        waterPlatform.Transparency = 0.8 -- TƒÉng ƒë·ªô trong su·ªët cho u √°m
        waterPlatform.BrickColor = BrickColor.new("Really black") -- ƒêen u √°m
        waterPlatform.CanCollide = true
        waterPlatform.Anchored = true
        waterPlatform.Parent = workspace
        
        waterWalkConnection = RunService.Stepped:Connect(function()
            if character and rootPart and humanoid then
                local rayParams = RaycastParams.new()
                rayParams.FilterDescendantsInstances = {character, waterPlatform}
                rayParams.FilterType = Enum.RaycastFilterType.Blacklist
                local ray = workspace:Raycast(rootPart.Position, Vector3.new(0, -10, 0), rayParams)
                
                local isOnWater = false
                local waterY = nil
                local cell = Terrain:WorldToCell(rootPart.Position)
                if Terrain:GetMaterialVoxels(cell.X, cell.Y, cell.Z).Material == Enum.Material.Water then
                    isOnWater = true
                    waterY = cell.Y * 4 + Terrain.WaterLevel
                elseif ray and ray.Instance and (ray.Instance.Name:lower():find("water") or ray.Instance.Name:lower():find("sea") or ray.Instance.Name:lower():find("ocean")) then
                    isOnWater = true
                    waterY = ray.Position.Y
                end
                
                if isOnWater and waterY then
                    waterPlatform.Position = Vector3.new(rootPart.Position.X, waterY + 0.25, rootPart.Position.Z)
                    rootPart.Position = Vector3.new(rootPart.Position.X, waterY + 3, rootPart.Position.Z)
                    humanoid:ChangeState(Enum.HumanoidStateType.Running)
                    humanoid.Sit = false
                else
                    waterPlatform.Position = Vector3.new(0, -1000, 0)
                end
            end
        end)
        notify("ƒê√£ b·∫≠t ƒêi Tr√™n N∆∞·ªõc")
    else
        if waterWalkConnection then
            waterWalkConnection:Disconnect()
            waterWalkConnection = nil
        end
        if waterPlatform then
            waterPlatform:Destroy()
            waterPlatform = nil
        end
        notify("ƒê√£ t·∫Øt ƒêi Tr√™n N∆∞·ªõc")
    end
end)

-- X·ª≠ l√Ω C√¢u C√°
fishingToggle.MouseButton1Click:Connect(function()
    isFishing = not isFishing
    fishingToggle.Text = "C√¢u C√°: " .. (isFishing and "B·∫¨T" or "T·∫ÆT")
    
    if isFishing then
        fishingFrame.Visible = true
        TweenService:Create(fishingFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back), {Position = UDim2.new(0.5, -100, 0.5, -60)}):Play()
        notify("ƒê√£ b·∫≠t menu C√¢u C√°")
    else
        fishingFrame.Visible = false
        TweenService:Create(fishingFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back), {Position = UDim2.new(0.5, -100, 1, 0)}):Play()
        isBypassFishing = false
        isAutoFishing = false
        if fishingConnection then
            fishingConnection:Disconnect()
            fishingConnection = nil
        end
        notify("ƒê√£ t·∫Øt C√¢u C√°")
    end
end)

-- Bypass C√°
bypassFishButton.MouseButton1Click:Connect(function()
    if not isFishing then return end
    isBypassFishing = not isBypassFishing
    isAutoFishing = false
    bypassFishButton.Text = "Bypass C√°: " .. (isBypassFishing and "B·∫¨T" or "T·∫ÆT")
    autoFishButton.Text = "C√¢u C√° BTh: T·∫ÆT"
    
    if isBypassFishing then
        if fishingConnection then
            fishingConnection:Disconnect()
            fishingConnection = nil
        end
        fishingConnection = RunService.Heartbeat:Connect(function()
            if character and humanoid then
                for _, v in pairs(ReplicatedStorage:GetDescendants()) do
                    if v:IsA("RemoteEvent") and v.Name:lower():find("fish") then
                        v:FireServer("Caught")
                    end
                end
                for _, v in pairs(workspace:GetDescendants()) do
                    if v:IsA("RemoteEvent") and v.Name:lower():find("fish") then
                        v:FireServer("Caught")
                    end
                end
            end
        end)
        notify("ƒê√£ b·∫≠t Bypass C√°")
    else
        if fishingConnection then
            fishingConnection:Disconnect()
            fishingConnection = nil
        end
        notify("ƒê√£ t·∫Øt Bypass C√°")
    end
end)

-- C√¢u C√° B√¨nh Th∆∞·ªùng
autoFishButton.MouseButton1Click:Connect(function()
    if not isFishing then return end
    isAutoFishing = not isAutoFishing
    isBypassFishing = false
    autoFishButton.Text = "C√¢u C√° BTh: " .. (isAutoFishing and "B·∫¨T" or "T·∫ÆT")
    bypassFishButton.Text = "Bypass C√°: T·∫ÆT"
    
    if isAutoFishing then
        if fishingConnection then
            fishingConnection:Disconnect()
            fishingConnection = nil
        end
        fishingConnection = RunService.Heartbeat:Connect(function()
            if character and humanoid then
                for _, v in pairs(ReplicatedStorage:GetDescendants()) do
                    if v:IsA("RemoteEvent") and v.Name:lower():find("cast") then
                        v:FireServer()
                        wait(2)
                        if v.Name:lower():find("reel") then
                            v:FireServer()
                        end
                    end
                end
                for _, v in pairs(workspace:GetDescendants()) do
                    if v:IsA("RemoteEvent") and v.Name:lower():find("cast") then
                        v:FireServer()
                        wait(2)
                        if v.Name:lower():find("reel") then
                            v:FireServer()
                        end
                    end
                end
            end
        end)
        notify("ƒê√£ b·∫≠t C√¢u C√° B√¨nh Th∆∞·ªùng")
    else
        if fishingConnection then
            fishingConnection:Disconnect()
            fishingConnection = nil
        end
        notify("ƒê√£ t·∫Øt C√¢u C√° B√¨nh Th∆∞·ªùng")
    end
end)

-- X·ª≠ l√Ω Bay
flyToggle.MouseButton1Click:Connect(function()
    isFlying = not isFlying
    flyToggle.Text = "Bay: " .. (isFlying and "B·∫¨T" or "T·∫ÆT")
    
    if isFlying then
        -- ƒê·∫øm ng∆∞·ª£c 3 gi√¢y
        for i = 3, 1, -1 do
            notify("B·∫≠t Bay trong: " .. i .. " gi√¢y")
            wait(1)
        end
        -- T·∫£i v√† ch·∫°y script fly
        local success, result = pcall(function()
            return loadstring(game:HttpGet("https://raw.githubusercontent.com/kiradavnreal/Kiradafly/main/Kiradafly.lua"))()
        end)
        if success then
            notify("ƒê√£ b·∫≠t ch·ª©c nƒÉng Bay")
        else
            notify("L·ªói khi t·∫£i script Bay: " .. tostring(result))
            isFlying = false
            flyToggle.Text = "Bay: T·∫ÆT"
        end
    else
        notify("ƒê√£ t·∫Øt ch·ª©c nƒÉng Bay")
        -- L∆∞u √Ω: Kh√¥ng c√≥ logic t·∫Øt bay v√¨ script b√™n th·ª© ba c√≥ th·ªÉ t·ª± qu·∫£n l√Ω
    end
end)

-- X·ª≠ l√Ω nh√¢n v·∫≠t reset
player.CharacterAdded:Connect(function(newCharacter)
    character = newCharacter
    humanoid = character:WaitForChild("Humanoid")
    rootPart = character:WaitForChild("HumanoidRootPart")
    
    if isNoClip then
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") and part ~= rootPart then
                part.CanCollide = false
            end
        end
    end
end)

-- Th√¥ng b√°o kh·ªüi ƒë·ªông
notify("Kirada Demo ƒë√£ t·∫£i! Ch·∫°m n√∫t ƒë·ªÉ m·ªü menu.")
